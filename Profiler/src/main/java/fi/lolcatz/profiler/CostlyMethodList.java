package fi.lolcatz.profiler;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Class that stores list of costly methods.
 */
public class CostlyMethodList {

    private static List<String> extraCostlyMethodList;
    private static int extraCost = 1000;

    static {
        extraCostlyMethodList = new ArrayList<String>();

        extraCostlyMethodList.add("java/nio/Bits.copyFromShortArray(Ljava/lang/Object;JJJ)V");
        extraCostlyMethodList.add("java/nio/Bits.copyToShortArray(JLjava/lang/Object;JJ)V");
        extraCostlyMethodList.add("java/nio/Bits.copyFromIntArray(Ljava/lang/Object;JJJ)V");
        extraCostlyMethodList.add("java/nio/Bits.copyToIntArray(JLjava/lang/Object;JJ)V");
        extraCostlyMethodList.add("java/nio/Bits.copyFromLongArray(Ljava/lang/Object;JJJ)V");
        extraCostlyMethodList.add("java/nio/Bits.copyToLongArray(JLjava/lang/Object;JJ)V");
        extraCostlyMethodList.add("java/lang/ClassLoader$NativeLibrary.load(Ljava/lang/String;)V");
        extraCostlyMethodList.add("java/lang/ClassLoader$NativeLibrary.find(Ljava/lang/String;)J");
        extraCostlyMethodList.add("java/lang/ClassLoader$NativeLibrary.unload()V");
        extraCostlyMethodList.add("java/net/Inet6Address.init()V");
        extraCostlyMethodList.add("java/util/ResourceBundle.getClassContext()[Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Package.getSystemPackage0(Ljava/lang/String;)Ljava/lang/String;");
        extraCostlyMethodList.add("java/lang/Package.getSystemPackages0()[Ljava/lang/String;");
        extraCostlyMethodList.add("java/lang/System.identityHashCode(Ljava/lang/Object;)I");
        extraCostlyMethodList.add("java/lang/System.currentTimeMillis()J");
        extraCostlyMethodList.add("java/lang/System.nanoTime()J");
        extraCostlyMethodList.add("java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V");
        extraCostlyMethodList.add("java/lang/System.registerNatives()V");
        extraCostlyMethodList.add("java/lang/System.mapLibraryName(Ljava/lang/String;)Ljava/lang/String;");
        extraCostlyMethodList.add("java/lang/System.setIn0(Ljava/io/InputStream;)V");
        extraCostlyMethodList.add("java/lang/System.setOut0(Ljava/io/PrintStream;)V");
        extraCostlyMethodList.add("java/lang/System.setErr0(Ljava/io/PrintStream;)V");
        extraCostlyMethodList.add("java/lang/System.initProperties(Ljava/util/Properties;)Ljava/util/Properties;");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getVersion0()Ljava/lang/String;");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.initOptionalSupportFields()V");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.isThreadContentionMonitoringEnabled()Z");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.isThreadCpuTimeEnabled()Z");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.isThreadAllocatedMemoryEnabled()Z");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getTotalClassCount()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getUnloadedClassCount()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getVerboseClass()Z");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getVerboseGC()Z");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getProcessId()I");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getVmArguments0()[Ljava/lang/String;");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getStartupTime()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getAvailableProcessors()I");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getTotalCompileTime()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getTotalThreadCount()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getLiveThreadCount()I");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getPeakThreadCount()I");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getDaemonThreadCount()I");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getSafepointCount()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getTotalSafepointTime()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getSafepointSyncTime()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getTotalApplicationNonStoppedTime()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getLoadedClassSize()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getUnloadedClassSize()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getClassLoadingTime()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getMethodDataSize()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getInitializedClassCount()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getClassInitializationTime()J");
        extraCostlyMethodList.add("sun/management/VMManagementImpl.getClassVerificationTime()J");
        extraCostlyMethodList.add("sun/misc/VM.initialize()V");
        extraCostlyMethodList.add("sun/misc/Unsafe.allocateInstance(Ljava/lang/Class;)Ljava/lang/Object;");
        extraCostlyMethodList.add("sun/misc/Unsafe.copyMemory(Ljava/lang/Object;JLjava/lang/Object;JJ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.park(ZJ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.unpark(Ljava/lang/Object;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getObject(Ljava/lang/Object;J)Ljava/lang/Object;");
        extraCostlyMethodList.add("sun/misc/Unsafe.putObject(Ljava/lang/Object;JLjava/lang/Object;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getBoolean(Ljava/lang/Object;J)Z");
        extraCostlyMethodList.add("sun/misc/Unsafe.putBoolean(Ljava/lang/Object;JZ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getByte(J)B");
        extraCostlyMethodList.add("sun/misc/Unsafe.getByte(Ljava/lang/Object;J)B");
        extraCostlyMethodList.add("sun/misc/Unsafe.putByte(JB)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putByte(Ljava/lang/Object;JB)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getShort(Ljava/lang/Object;J)S");
        extraCostlyMethodList.add("sun/misc/Unsafe.getShort(J)S");
        extraCostlyMethodList.add("sun/misc/Unsafe.putShort(Ljava/lang/Object;JS)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putShort(JS)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getChar(J)C");
        extraCostlyMethodList.add("sun/misc/Unsafe.getChar(Ljava/lang/Object;J)C");
        extraCostlyMethodList.add("sun/misc/Unsafe.putChar(JC)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putChar(Ljava/lang/Object;JC)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getInt(Ljava/lang/Object;J)I");
        extraCostlyMethodList.add("sun/misc/Unsafe.getInt(J)I");
        extraCostlyMethodList.add("sun/misc/Unsafe.putInt(JI)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putInt(Ljava/lang/Object;JI)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getLong(Ljava/lang/Object;J)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.getLong(J)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.putLong(JJ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putLong(Ljava/lang/Object;JJ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getFloat(J)F");
        extraCostlyMethodList.add("sun/misc/Unsafe.getFloat(Ljava/lang/Object;J)F");
        extraCostlyMethodList.add("sun/misc/Unsafe.putFloat(JF)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putFloat(Ljava/lang/Object;JF)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getDouble(J)D");
        extraCostlyMethodList.add("sun/misc/Unsafe.getDouble(Ljava/lang/Object;J)D");
        extraCostlyMethodList.add("sun/misc/Unsafe.putDouble(JD)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putDouble(Ljava/lang/Object;JD)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object;");
        extraCostlyMethodList.add("sun/misc/Unsafe.putObjectVolatile(Ljava/lang/Object;JLjava/lang/Object;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getBooleanVolatile(Ljava/lang/Object;J)Z");
        extraCostlyMethodList.add("sun/misc/Unsafe.putBooleanVolatile(Ljava/lang/Object;JZ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getByteVolatile(Ljava/lang/Object;J)B");
        extraCostlyMethodList.add("sun/misc/Unsafe.putByteVolatile(Ljava/lang/Object;JB)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getShortVolatile(Ljava/lang/Object;J)S");
        extraCostlyMethodList.add("sun/misc/Unsafe.putShortVolatile(Ljava/lang/Object;JS)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getCharVolatile(Ljava/lang/Object;J)C");
        extraCostlyMethodList.add("sun/misc/Unsafe.putCharVolatile(Ljava/lang/Object;JC)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getIntVolatile(Ljava/lang/Object;J)I");
        extraCostlyMethodList.add("sun/misc/Unsafe.putIntVolatile(Ljava/lang/Object;JI)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getLongVolatile(Ljava/lang/Object;J)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.putLongVolatile(Ljava/lang/Object;JJ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getFloatVolatile(Ljava/lang/Object;J)F");
        extraCostlyMethodList.add("sun/misc/Unsafe.putFloatVolatile(Ljava/lang/Object;JF)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getDoubleVolatile(Ljava/lang/Object;J)D");
        extraCostlyMethodList.add("sun/misc/Unsafe.putDoubleVolatile(Ljava/lang/Object;JD)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.getAddress(J)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.putAddress(JJ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.compareAndSwapObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z");
        extraCostlyMethodList.add("sun/misc/Unsafe.compareAndSwapLong(Ljava/lang/Object;JJJ)Z");
        extraCostlyMethodList.add("sun/misc/Unsafe.compareAndSwapInt(Ljava/lang/Object;JII)Z");
        extraCostlyMethodList.add("sun/misc/Unsafe.putOrderedObject(Ljava/lang/Object;JLjava/lang/Object;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putOrderedLong(Ljava/lang/Object;JJ)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.putOrderedInt(Ljava/lang/Object;JI)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.registerNatives()V");
        extraCostlyMethodList.add("sun/misc/Unsafe.defineClass(Ljava/lang/String;[BIILjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;");
        extraCostlyMethodList.add("sun/misc/Unsafe.defineClass(Ljava/lang/String;[BII)Ljava/lang/Class;");
        extraCostlyMethodList.add("sun/misc/Unsafe.throwException(Ljava/lang/Throwable;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.objectFieldOffset(Ljava/lang/reflect/Field;)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.staticFieldBase(Ljava/lang/reflect/Field;)Ljava/lang/Object;");
        extraCostlyMethodList.add("sun/misc/Unsafe.allocateMemory(J)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.reallocateMemory(JJ)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.setMemory(Ljava/lang/Object;JJB)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.freeMemory(J)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.staticFieldOffset(Ljava/lang/reflect/Field;)J");
        extraCostlyMethodList.add("sun/misc/Unsafe.ensureClassInitialized(Ljava/lang/Class;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.arrayBaseOffset(Ljava/lang/Class;)I");
        extraCostlyMethodList.add("sun/misc/Unsafe.arrayIndexScale(Ljava/lang/Class;)I");
        extraCostlyMethodList.add("sun/misc/Unsafe.addressSize()I");
        extraCostlyMethodList.add("sun/misc/Unsafe.pageSize()I");
        extraCostlyMethodList.add("sun/misc/Unsafe.defineAnonymousClass(Ljava/lang/Class;[B[Ljava/lang/Object;)Ljava/lang/Class;");
        extraCostlyMethodList.add("sun/misc/Unsafe.monitorEnter(Ljava/lang/Object;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.monitorExit(Ljava/lang/Object;)V");
        extraCostlyMethodList.add("sun/misc/Unsafe.tryMonitorEnter(Ljava/lang/Object;)Z");
        extraCostlyMethodList.add("sun/misc/Unsafe.getLoadAverage([DI)I");
        extraCostlyMethodList.add("java/net/InetAddress.init()V");
        extraCostlyMethodList.add("java/util/jar/JarFile.getMetaInfEntryNames()[Ljava/lang/String;");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.isModifiableClass0(JLjava/lang/Class;)Z");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.isRetransformClassesSupported0(J)Z");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.setHasRetransformableTransformers(JZ)V");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.retransformClasses0(J[Ljava/lang/Class;)V");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.redefineClasses0(J[Ljava/lang/instrument/ClassDefinition;)V");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.getAllLoadedClasses0(J)[Ljava/lang/Class;");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.getInitiatedClasses0(JLjava/lang/ClassLoader;)[Ljava/lang/Class;");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.getObjectSize0(JLjava/lang/Object;)J");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.appendToClassLoaderSearch0(JLjava/lang/String;Z)V");
        extraCostlyMethodList.add("sun/instrument/InstrumentationImpl.setNativeMethodPrefixes(J[Ljava/lang/String;Z)V");
        extraCostlyMethodList.add("java/net/InetAddressImplFactory.isIPv6Supported()Z");
        extraCostlyMethodList.add("java/io/FileOutputStream.write(IZ)V");
        extraCostlyMethodList.add("java/io/FileOutputStream.open(Ljava/lang/String;Z)V");
        extraCostlyMethodList.add("java/io/FileOutputStream.initIDs()V");
        extraCostlyMethodList.add("java/io/FileOutputStream.close0()V");
        extraCostlyMethodList.add("java/io/FileOutputStream.writeBytes([BIIZ)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.get(Ljava/lang/Object;I)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/reflect/Array.getLength(Ljava/lang/Object;)I");
        extraCostlyMethodList.add("java/lang/reflect/Array.newArray(Ljava/lang/Class;I)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/reflect/Array.getBoolean(Ljava/lang/Object;I)Z");
        extraCostlyMethodList.add("java/lang/reflect/Array.getByte(Ljava/lang/Object;I)B");
        extraCostlyMethodList.add("java/lang/reflect/Array.getShort(Ljava/lang/Object;I)S");
        extraCostlyMethodList.add("java/lang/reflect/Array.getChar(Ljava/lang/Object;I)C");
        extraCostlyMethodList.add("java/lang/reflect/Array.getInt(Ljava/lang/Object;I)I");
        extraCostlyMethodList.add("java/lang/reflect/Array.getLong(Ljava/lang/Object;I)J");
        extraCostlyMethodList.add("java/lang/reflect/Array.getFloat(Ljava/lang/Object;I)F");
        extraCostlyMethodList.add("java/lang/reflect/Array.getDouble(Ljava/lang/Object;I)D");
        extraCostlyMethodList.add("java/lang/reflect/Array.set(Ljava/lang/Object;ILjava/lang/Object;)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setBoolean(Ljava/lang/Object;IZ)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setByte(Ljava/lang/Object;IB)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setChar(Ljava/lang/Object;IC)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setShort(Ljava/lang/Object;IS)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setInt(Ljava/lang/Object;II)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setLong(Ljava/lang/Object;IJ)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setFloat(Ljava/lang/Object;IF)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.setDouble(Ljava/lang/Object;ID)V");
        extraCostlyMethodList.add("java/lang/reflect/Array.multiNewArray(Ljava/lang/Class;[I)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/Runtime.gc()V");
        extraCostlyMethodList.add("java/lang/Runtime.freeMemory()J");
        extraCostlyMethodList.add("java/lang/Runtime.maxMemory()J");
        extraCostlyMethodList.add("java/lang/Runtime.availableProcessors()I");
        extraCostlyMethodList.add("java/lang/Runtime.totalMemory()J");
        extraCostlyMethodList.add("java/lang/Runtime.runFinalization0()V");
        extraCostlyMethodList.add("java/lang/Runtime.traceInstructions(Z)V");
        extraCostlyMethodList.add("java/lang/Runtime.traceMethodCalls(Z)V");
        extraCostlyMethodList.add("java/lang/Thread.isInterrupted(Z)Z");
        extraCostlyMethodList.add("java/lang/Thread.currentThread()Ljava/lang/Thread;");
        extraCostlyMethodList.add("java/lang/Thread.registerNatives()V");
        extraCostlyMethodList.add("java/lang/Thread.holdsLock(Ljava/lang/Object;)Z");
        extraCostlyMethodList.add("java/lang/Thread.yield()V");
        extraCostlyMethodList.add("java/lang/Thread.sleep(J)V");
        extraCostlyMethodList.add("java/lang/Thread.start0()V");
        extraCostlyMethodList.add("java/lang/Thread.isAlive()Z");
        extraCostlyMethodList.add("java/lang/Thread.countStackFrames()I");
        extraCostlyMethodList.add("java/lang/Thread.dumpThreads([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;");
        extraCostlyMethodList.add("java/lang/Thread.getThreads()[Ljava/lang/Thread;");
        extraCostlyMethodList.add("java/lang/Thread.setPriority0(I)V");
        extraCostlyMethodList.add("java/lang/Thread.stop0(Ljava/lang/Object;)V");
        extraCostlyMethodList.add("java/lang/Thread.suspend0()V");
        extraCostlyMethodList.add("java/lang/Thread.resume0()V");
        extraCostlyMethodList.add("java/lang/Thread.interrupt0()V");
        extraCostlyMethodList.add("java/lang/Thread.setNativeName(Ljava/lang/String;)V");
        extraCostlyMethodList.add("java/util/zip/Inflater.end(J)V");
        extraCostlyMethodList.add("java/util/zip/Inflater.init(Z)J");
        extraCostlyMethodList.add("java/util/zip/Inflater.reset(J)V");
        extraCostlyMethodList.add("java/util/zip/Inflater.initIDs()V");
        extraCostlyMethodList.add("java/util/zip/Inflater.setDictionary(J[BII)V");
        extraCostlyMethodList.add("java/util/zip/Inflater.getAdler(J)I");
        extraCostlyMethodList.add("java/util/zip/Inflater.getBytesRead(J)J");
        extraCostlyMethodList.add("java/util/zip/Inflater.getBytesWritten(J)J");
        extraCostlyMethodList.add("java/util/zip/Inflater.inflateBytes(J[BII)I");
        extraCostlyMethodList.add("java/lang/ClassLoader.registerNatives()V");
        extraCostlyMethodList.add("java/lang/ClassLoader.defineClass0(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/ClassLoader.defineClass1(Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/ClassLoader.defineClass2(Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/ClassLoader.resolveClass0(Ljava/lang/Class;)V");
        extraCostlyMethodList.add("java/lang/ClassLoader.findBootstrapClass(Ljava/lang/String;)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/ClassLoader.findLoadedClass0(Ljava/lang/String;)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/ClassLoader.getCaller(I)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/ClassLoader.retrieveDirectives()Ljava/lang/AssertionStatusDirectives;");
        extraCostlyMethodList.add("java/util/zip/ZipFile.close(J)V");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntry(J[BZ)J");
        extraCostlyMethodList.add("java/util/zip/ZipFile.open(Ljava/lang/String;IJZ)J");
        extraCostlyMethodList.add("java/util/zip/ZipFile.read(JJJ[BII)I");
        extraCostlyMethodList.add("java/util/zip/ZipFile.initIDs()V");
        extraCostlyMethodList.add("java/util/zip/ZipFile.freeEntry(JJ)V");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getNextEntry(JI)J");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getTotal(J)I");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntryTime(J)J");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntryCrc(J)J");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntryCSize(J)J");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntrySize(J)J");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntryMethod(J)I");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntryFlag(J)I");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getCommentBytes(J)[B");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getEntryBytes(JI)[B");
        extraCostlyMethodList.add("java/util/zip/ZipFile.getZipMessage(J)Ljava/lang/String;");
        extraCostlyMethodList.add("sun/misc/Signal.findSignal(Ljava/lang/String;)I");
        extraCostlyMethodList.add("sun/misc/Signal.handle0(IJ)J");
        extraCostlyMethodList.add("sun/misc/Signal.raise0(I)V");
        extraCostlyMethodList.add("java/lang/Class.forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Class.isAssignableFrom(Ljava/lang/Class;)Z");
        extraCostlyMethodList.add("java/lang/Class.isInstance(Ljava/lang/Object;)Z");
        extraCostlyMethodList.add("java/lang/Class.getModifiers()I");
        extraCostlyMethodList.add("java/lang/Class.isInterface()Z");
        extraCostlyMethodList.add("java/lang/Class.isArray()Z");
        extraCostlyMethodList.add("java/lang/Class.isPrimitive()Z");
        extraCostlyMethodList.add("java/lang/Class.getSuperclass()Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Class.getComponentType()Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Class.registerNatives()V");
        extraCostlyMethodList.add("java/lang/Class.getName0()Ljava/lang/String;");
        extraCostlyMethodList.add("java/lang/Class.getClassLoader0()Ljava/lang/ClassLoader;");
        extraCostlyMethodList.add("java/lang/Class.getInterfaces()[Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Class.getSigners()[Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/Class.setSigners([Ljava/lang/Object;)V");
        extraCostlyMethodList.add("java/lang/Class.getEnclosingMethod0()[Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/Class.getDeclaringClass()Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Class.getProtectionDomain0()Ljava/security/ProtectionDomain;");
        extraCostlyMethodList.add("java/lang/Class.setProtectionDomain0(Ljava/security/ProtectionDomain;)V");
        extraCostlyMethodList.add("java/lang/Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Class.getGenericSignature()Ljava/lang/String;");
        extraCostlyMethodList.add("java/lang/Class.getRawAnnotations()[B");
        extraCostlyMethodList.add("java/lang/Class.getConstantPool()Lsun/reflect/ConstantPool;");
        extraCostlyMethodList.add("java/lang/Class.getDeclaredFields0(Z)[Ljava/lang/reflect/Field;");
        extraCostlyMethodList.add("java/lang/Class.getDeclaredMethods0(Z)[Ljava/lang/reflect/Method;");
        extraCostlyMethodList.add("java/lang/Class.getDeclaredConstructors0(Z)[Ljava/lang/reflect/Constructor;");
        extraCostlyMethodList.add("java/lang/Class.getDeclaredClasses0()[Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Class.desiredAssertionStatus0(Ljava/lang/Class;)Z");
        extraCostlyMethodList.add("java/net/Inet4AddressImpl.getHostByAddr([B)Ljava/lang/String;");
        extraCostlyMethodList.add("java/net/Inet4AddressImpl.lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;");
        extraCostlyMethodList.add("java/net/Inet4AddressImpl.getLocalHostName()Ljava/lang/String;");
        extraCostlyMethodList.add("java/net/Inet4AddressImpl.isReachable0([BI[BI)Z");
        extraCostlyMethodList.add("java/net/Inet6AddressImpl.getHostByAddr([B)Ljava/lang/String;");
        extraCostlyMethodList.add("java/net/Inet6AddressImpl.lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;");
        extraCostlyMethodList.add("java/net/Inet6AddressImpl.getLocalHostName()Ljava/lang/String;");
        extraCostlyMethodList.add("java/net/Inet6AddressImpl.isReachable0([BII[BII)Z");
        extraCostlyMethodList.add("java/io/FileDescriptor.initIDs()V");
        extraCostlyMethodList.add("java/io/FileDescriptor.sync()V");
        extraCostlyMethodList.add("sun/misc/Version.getJvmSpecialVersion()Ljava/lang/String;");
        extraCostlyMethodList.add("sun/misc/Version.getJdkSpecialVersion()Ljava/lang/String;");
        extraCostlyMethodList.add("sun/misc/Version.getJvmVersionInfo()Z");
        extraCostlyMethodList.add("sun/misc/Version.getJdkVersionInfo()V");
        extraCostlyMethodList.add("java/nio/MappedByteBuffer.load0(JJ)V");
        extraCostlyMethodList.add("java/nio/MappedByteBuffer.isLoaded0(JJI)Z");
        extraCostlyMethodList.add("java/nio/MappedByteBuffer.force0(Ljava/io/FileDescriptor;JJ)V");
        extraCostlyMethodList.add("java/util/concurrent/atomic/AtomicLong.VMSupportsCS8()Z");
        extraCostlyMethodList.add("java/lang/Throwable.fillInStackTrace(I)Ljava/lang/Throwable;");
        extraCostlyMethodList.add("java/lang/Throwable.getStackTraceDepth()I");
        extraCostlyMethodList.add("java/lang/Throwable.getStackTraceElement(I)Ljava/lang/StackTraceElement;");
        extraCostlyMethodList.add("java/io/UnixFileSystem.getLength(Ljava/io/File;)J");
        extraCostlyMethodList.add("java/io/UnixFileSystem.list(Ljava/io/File;)[Ljava/lang/String;");
        extraCostlyMethodList.add("java/io/UnixFileSystem.setReadOnly(Ljava/io/File;)Z");
        extraCostlyMethodList.add("java/io/UnixFileSystem.checkAccess(Ljava/io/File;I)Z");
        extraCostlyMethodList.add("java/io/UnixFileSystem.initIDs()V");
        extraCostlyMethodList.add("java/io/UnixFileSystem.getLastModifiedTime(Ljava/io/File;)J");
        extraCostlyMethodList.add("java/io/UnixFileSystem.createFileExclusively(Ljava/lang/String;)Z");
        extraCostlyMethodList.add("java/io/UnixFileSystem.createDirectory(Ljava/io/File;)Z");
        extraCostlyMethodList.add("java/io/UnixFileSystem.setLastModifiedTime(Ljava/io/File;J)Z");
        extraCostlyMethodList.add("java/io/UnixFileSystem.setPermission(Ljava/io/File;IZZ)Z");
        extraCostlyMethodList.add("java/io/UnixFileSystem.getSpace(Ljava/io/File;I)J");
        extraCostlyMethodList.add("java/io/UnixFileSystem.canonicalize0(Ljava/lang/String;)Ljava/lang/String;");
        extraCostlyMethodList.add("java/io/UnixFileSystem.getBooleanAttributes0(Ljava/io/File;)I");
        extraCostlyMethodList.add("java/io/UnixFileSystem.delete0(Ljava/io/File;)Z");
        extraCostlyMethodList.add("java/io/UnixFileSystem.rename0(Ljava/io/File;Ljava/io/File;)Z");
        extraCostlyMethodList.add("java/lang/Compiler.registerNatives()V");
        extraCostlyMethodList.add("java/lang/Compiler.initialize()V");
        extraCostlyMethodList.add("java/lang/Compiler.command(Ljava/lang/Object;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/Compiler.enable()V");
        extraCostlyMethodList.add("java/lang/Compiler.compileClass(Ljava/lang/Class;)Z");
        extraCostlyMethodList.add("java/lang/Compiler.compileClasses(Ljava/lang/String;)Z");
        extraCostlyMethodList.add("java/lang/Compiler.disable()V");
        extraCostlyMethodList.add("java/net/Inet4Address.init()V");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getSize0(Ljava/lang/Object;)I");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getClassAt0(Ljava/lang/Object;I)Ljava/lang/Class;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getClassAtIfLoaded0(Ljava/lang/Object;I)Ljava/lang/Class;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getMethodAt0(Ljava/lang/Object;I)Ljava/lang/reflect/Member;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getMethodAtIfLoaded0(Ljava/lang/Object;I)Ljava/lang/reflect/Member;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getFieldAt0(Ljava/lang/Object;I)Ljava/lang/reflect/Field;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getFieldAtIfLoaded0(Ljava/lang/Object;I)Ljava/lang/reflect/Field;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getMemberRefInfoAt0(Ljava/lang/Object;I)[Ljava/lang/String;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getIntAt0(Ljava/lang/Object;I)I");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getLongAt0(Ljava/lang/Object;I)J");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getFloatAt0(Ljava/lang/Object;I)F");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getDoubleAt0(Ljava/lang/Object;I)D");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getStringAt0(Ljava/lang/Object;I)Ljava/lang/String;");
        extraCostlyMethodList.add("sun/reflect/ConstantPool.getUTF8At0(Ljava/lang/Object;I)Ljava/lang/String;");
        extraCostlyMethodList.add("java/lang/ref/Finalizer.invokeFinalizeMethod(Ljava/lang/Object;)V");
        extraCostlyMethodList.add("java/lang/Object.wait(J)V");
        extraCostlyMethodList.add("java/lang/Object.hashCode()I");
        extraCostlyMethodList.add("java/lang/Object.getClass()Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Object.clone()Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/Object.registerNatives()V");
        extraCostlyMethodList.add("java/lang/Object.notify()V");
        extraCostlyMethodList.add("java/lang/Object.notifyAll()V");
        extraCostlyMethodList.add("java/io/FileInputStream.open(Ljava/lang/String;)V");
        extraCostlyMethodList.add("java/io/FileInputStream.read()I");
        extraCostlyMethodList.add("java/io/FileInputStream.readBytes([BII)I");
        extraCostlyMethodList.add("java/io/FileInputStream.skip(J)J");
        extraCostlyMethodList.add("java/io/FileInputStream.available()I");
        extraCostlyMethodList.add("java/io/FileInputStream.initIDs()V");
        extraCostlyMethodList.add("java/io/FileInputStream.close0()V");
        extraCostlyMethodList.add("sun/reflect/Reflection.getClassAccessFlags(Ljava/lang/Class;)I");
        extraCostlyMethodList.add("sun/reflect/Reflection.getCallerClass(I)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/String.intern()Ljava/lang/String;");
        extraCostlyMethodList.add("sun/misc/Perf.registerNatives()V");
        extraCostlyMethodList.add("sun/misc/Perf.attach(Ljava/lang/String;II)Ljava/nio/ByteBuffer;");
        extraCostlyMethodList.add("sun/misc/Perf.detach(Ljava/nio/ByteBuffer;)V");
        extraCostlyMethodList.add("sun/misc/Perf.createByteArray(Ljava/lang/String;II[BI)Ljava/nio/ByteBuffer;");
        extraCostlyMethodList.add("sun/misc/Perf.createLong(Ljava/lang/String;IIJ)Ljava/nio/ByteBuffer;");
        extraCostlyMethodList.add("sun/misc/Perf.highResCounter()J");
        extraCostlyMethodList.add("sun/misc/Perf.highResFrequency()J");
        extraCostlyMethodList.add("java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/security/AccessController.doPrivileged(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/security/AccessController.doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/security/AccessController.getInheritedAccessControlContext()Ljava/security/AccessControlContext;");
        extraCostlyMethodList.add("java/security/AccessController.getStackAccessControlContext()Ljava/security/AccessControlContext;");
        extraCostlyMethodList.add("java/io/FileSystem.getFileSystem()Ljava/io/FileSystem;");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandle.invokeExact([Ljava/lang/Object;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandle.invoke([Ljava/lang/Object;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.registerNatives()V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.resolve(Ljava/lang/invoke/MemberName;Ljava/lang/Class;)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.init(Ljava/lang/invoke/AdapterMethodHandle;Ljava/lang/invoke/MethodHandle;I)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.init(Ljava/lang/invoke/BoundMethodHandle;Ljava/lang/Object;I)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.init(Ljava/lang/invoke/MemberName;Ljava/lang/Object;)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.init(Ljava/lang/invoke/MethodType;)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.init(Ljava/lang/invoke/DirectMethodHandle;Ljava/lang/Object;ZLjava/lang/Class;)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.expand(Ljava/lang/invoke/MemberName;)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Class;I[Ljava/lang/invoke/MemberName;)I");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.getTarget(Ljava/lang/invoke/MethodHandle;I)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.getConstant(I)I");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.setCallSiteTargetNormal(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.setCallSiteTargetVolatile(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V");
        extraCostlyMethodList.add("java/lang/invoke/MethodHandleNatives.getNamedCon(I[Ljava/lang/Object;)I");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.write(I[BII)V");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.close(I)V");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.read(I[BII)I");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.connect(ILjava/lang/String;)V");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.socket()I");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.isLinuxThreads()Z");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.getLinuxThreadsManager(I)I");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.sendQuitToChildrenOf(I)V");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.sendQuitTo(I)V");
        extraCostlyMethodList.add("sun/tools/attach/LinuxVirtualMachine.checkPermissions(Ljava/lang/String;)V");
        extraCostlyMethodList.add("sun/misc/NativeSignalHandler.handle0(IJ)V");
        extraCostlyMethodList.add("sun/reflect/NativeMethodAccessorImpl.invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/Double.doubleToRawLongBits(D)J");
        extraCostlyMethodList.add("java/lang/Double.longBitsToDouble(J)D");
        extraCostlyMethodList.add("sun/reflect/NativeConstructorAccessorImpl.newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;");
        extraCostlyMethodList.add("java/lang/reflect/Proxy.defineClass0(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;");
        extraCostlyMethodList.add("java/lang/Float.floatToRawIntBits(F)I");
        extraCostlyMethodList.add("java/lang/Float.intBitsToFloat(I)F");
        extraCostlyMethodList.add("java/lang/StrictMath.sin(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.cos(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.tan(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.asin(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.acos(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.atan(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.exp(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.log(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.log10(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.sqrt(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.cbrt(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.IEEEremainder(DD)D");
        extraCostlyMethodList.add("java/lang/StrictMath.atan2(DD)D");
        extraCostlyMethodList.add("java/lang/StrictMath.pow(DD)D");
        extraCostlyMethodList.add("java/lang/StrictMath.sinh(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.cosh(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.tanh(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.hypot(DD)D");
        extraCostlyMethodList.add("java/lang/StrictMath.expm1(D)D");
        extraCostlyMethodList.add("java/lang/StrictMath.log1p(D)D");
        extraCostlyMethodList.add("java/lang/Shutdown.halt0(I)V");
        extraCostlyMethodList.add("java/lang/Shutdown.runAllFinalizers()V");

    }

    /**
     * Get list of known nativeMethods.
     *
     * @return List of costly methods
     */
    public static List<String> getCostlyMethodList() {
        return extraCostlyMethodList;
    }

    /**
     * Set list of costly methods.
     *
     * @param costlyMethodListToSet List of costly methods
     */
    public static void setCostlyMethodList(List<String> costlyMethodListToSet) {
        extraCostlyMethodList = costlyMethodListToSet;
    }

    /**
     * Check if given method is in extraCostlyMethodList
     *
     * @param methodName method to be checked
     * @return Is given method costly
     */
    public static boolean isNativeMethod(String methodName) {
        for (String costlyMethod : extraCostlyMethodList) {
            if (methodName.equals(costlyMethod)) {
                return true;
            }
        }
        return false;
    }

    /**
     * Add given methods to the extraCostlyMethodList.
     *
     * @param costlyMethodsToList List of methods to list.
     */
    public static void add(String... costlyMethodsToList) {
        extraCostlyMethodList.addAll(Arrays.asList(costlyMethodsToList));
    }

    public static int getCostOfCostlyMethods() {
        return extraCost;
    }

    public static void setCostOfCostlyMethods(int cost) {
        extraCost = cost;
    }
}
